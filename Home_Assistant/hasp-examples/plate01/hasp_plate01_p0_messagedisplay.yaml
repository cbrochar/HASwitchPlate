##############################################################################
# Automations and required components to display information messages on HASP
##############################################################################
# Paste the following into your Lovelace config to control this via the UI:
##############################################################################
#      - type: entities
#        title: plate01 Message Display
#        show_header_toggle: false
#        entities:
#          - entity: input_text.hasp_plate01_messagetext
#            name: Message to display
#          - entity: input_select.hasp_plate01_messagedisplayfont
#            name: Message font
#          - entity: input_number.hasp_plate01_messagetime
#            name: Display Time
#          - type: button
#            name: Show Message
#            action_name: Show Message
#            tap_action:
#              action: call-service
#              service: automation.trigger
#              service_data:
#                entity_id: automation.hasp_plate01_00_messagedisplaytext
##############################################################################

input_text:
  hasp_plate01_messagetext:
    name: plate01 Message Text
    icon: mdi:playlist-edit
    max: 126

input_number:
  hasp_plate01_messagetime:
    name: plate01 Message Time
    icon: mdi:clock-end
    mode: box
    min: 1
    max: 600
    step: 1
    unit_of_measurement: seconds

input_select:
  hasp_plate01_messagedisplayfont:
    name: plate01 Message Display Font
    icon: mdi:format-font
    options:
      - 0 Consolas 24
      - 1 Consolas 32
      - 2 Consolas 48
      - 3 Consolas Bold 80
      - 4 Webdings 56
      - 5 Noto Sans 24
      - 6 Noto Sans 32
      - 7 Noto Sans 48
      - 8 Noto Sans 64
      - 9 Noto Sans 80
      - 10 Noto Sans Bold 80

automation:
  ##############################################################################
  # Display text message
  - alias: hasp_plate01_00_messagedisplaytext
    trigger: []
    action:
      - service: mqtt.publish
        data_template:
          # topic: 'hasp/plate01/command/p[0].b[1].txt'
          # payload: '"{{ states.input_text.hasp_plate01_messagetext.state }}"'
          topic: "hasp/plate01/command/json"
          payload: '["p[0].b[1].font={{states("input_select.hasp_plate01_messagedisplayfont").split(" ")[0]|int}}","p[0].b[1].txt=\"{{ states.input_text.hasp_plate01_messagetext.state }}\""]'
      - service: mqtt.publish
        data:
          topic: "hasp/plate01/command/page"
          payload: "0"
      - service: mqtt.publish
        data:
          topic: "hasp/plate01/command"
          payload: "vis 1,1"
      - delay: "00:00:{{ states.input_number.hasp_plate01_messagetime.state | int }}"
      - service: mqtt.publish
        data_template:
          topic: "hasp/plate01/command/page"
          payload: "{{ states.input_number.hasp_plate01_activepage.state | int }}"
