##############################################################################
# Automations for handling Scene select buttons on page 1

input_select:
  hasp_plate01_p1_b4_font:
    name: plate01 p[1].b[4] Font
    icon: mdi:format-font
    options:
      - 0 Consolas 24
      - 1 Consolas 32
      - 2 Consolas 48
      - 3 Consolas Bold 80
      - 4 Webdings 56
      - 5 Noto Sans 24
      - 6 Noto Sans 32
      - 7 Noto Sans 48
      - 8 Noto Sans 64
      - 9 Noto Sans 80
      - 10 Noto Sans Bold 80
  hasp_plate01_p1_b5_font:
    name: plate01 p[1].b[5] Font
    icon: mdi:format-font
    options:
      - 0 Consolas 24
      - 1 Consolas 32
      - 2 Consolas 48
      - 3 Consolas Bold 80
      - 4 Webdings 56
      - 5 Noto Sans 24
      - 6 Noto Sans 32
      - 7 Noto Sans 48
      - 8 Noto Sans 64
      - 9 Noto Sans 80
      - 10 Noto Sans Bold 80
  hasp_plate01_p1_b6_font:
    name: plate01 p[1].b[6] Font
    icon: mdi:format-font
    options:
      - 0 Consolas 24
      - 1 Consolas 32
      - 2 Consolas 48
      - 3 Consolas Bold 80
      - 4 Webdings 56
      - 5 Noto Sans 24
      - 6 Noto Sans 32
      - 7 Noto Sans 48
      - 8 Noto Sans 64
      - 9 Noto Sans 80
      - 10 Noto Sans Bold 80
  hasp_plate01_p1_b7_font:
    name: plate01 p[1].b[7] Font
    icon: mdi:format-font
    options:
      - 0 Consolas 24
      - 1 Consolas 32
      - 2 Consolas 48
      - 3 Consolas Bold 80
      - 4 Webdings 56
      - 5 Noto Sans 24
      - 6 Noto Sans 32
      - 7 Noto Sans 48
      - 8 Noto Sans 64
      - 9 Noto Sans 80
      - 10 Noto Sans Bold 80

  hasp_plate01_p1_b4_scene:
    name: plate01 p[1].b[4] Scene
    options:
      - No scenes defined
  hasp_plate01_p1_b5_scene:
    name: plate01 p[1].b[5] Scene
    options:
      - No scenes defined
  hasp_plate01_p1_b6_scene:
    name: plate01 p[1].b[6] Scene
    options:
      - No scenes defined
  hasp_plate01_p1_b7_scene:
    name: plate01 p[1].b[7] Scene
    options:
      - No scenes defined

input_text:
  hasp_plate01_p1_b4_text:
    name: plate01 p[1].b[4] Text
  hasp_plate01_p1_b5_text:
    name: plate01 p[1].b[5] Text
  hasp_plate01_p1_b6_text:
    name: plate01 p[1].b[6] Text
  hasp_plate01_p1_b7_text:
    name: plate01 p[1].b[7] Text
  hasp_plate01_p1_b4_scene:
  hasp_plate01_p1_b5_scene:
  hasp_plate01_p1_b6_scene:
  hasp_plate01_p1_b7_scene:

automation:
  # populate input_selects with available scenes
  - alias: hasp_plate01_p1_scene_populate
    trigger:
      - platform: homeassistant
        event: start
    action:
      - service: homeassistant.turn_off
        entity_id: 
          - automation.hasp_plate01_p1_b4_scene_save
          - automation.hasp_plate01_p1_b5_scene_save
          - automation.hasp_plate01_p1_b6_scene_save
          - automation.hasp_plate01_p1_b7_scene_save
      - service: input_select.set_options
        data_template:
          entity_id: input_select.hasp_plate01_p1_b4_scene
          options: >-
            {{ states.scene | map(attribute='entity_id') | list }}
      - service: input_select.set_options
        data_template:
          entity_id: input_select.hasp_plate01_p1_b5_scene
          options: >-
            {{ states.scene | map(attribute='entity_id') | list }}
      - service: input_select.set_options
        data_template:
          entity_id: input_select.hasp_plate01_p1_b6_scene
          options: >-
            {{ states.scene | map(attribute='entity_id') | list }}
      - service: input_select.set_options
        data_template:
          entity_id: input_select.hasp_plate01_p1_b7_scene
          options: >-
            {{ states.scene | map(attribute='entity_id') | list }}
      - service: input_select.select_option
        data_template:
          entity_id: input_select.hasp_plate01_p1_b4_scene
          option: "{{ states('input_text.hasp_plate01_p1_b4_scene') }}"
      - service: input_select.select_option
        data_template:
          entity_id: input_select.hasp_plate01_p1_b5_scene
          option: "{{ states('input_text.hasp_plate01_p1_b5_scene') }}"
      - service: input_select.select_option
        data_template:
          entity_id: input_select.hasp_plate01_p1_b6_scene
          option: "{{ states('input_text.hasp_plate01_p1_b6_scene') }}"
      - service: input_select.select_option
        data_template:
          entity_id: input_select.hasp_plate01_p1_b7_scene
          option: "{{ states('input_text.hasp_plate01_p1_b7_scene') }}"
      - service: homeassistant.turn_on
        entity_id: 
          - automation.hasp_plate01_p1_b4_scene_save
          - automation.hasp_plate01_p1_b5_scene_save
          - automation.hasp_plate01_p1_b6_scene_save
          - automation.hasp_plate01_p1_b7_scene_save

  # save current scene to input_text for safe keeping
  - alias: hasp_plate01_p1_b4_scene_save
    trigger:
      - platform: state
        entity_id: input_select.hasp_plate01_p1_b4_scene
    action:
      - service: input_text.set_value
        data_template:
          entity_id: input_text.hasp_plate01_p1_b4_scene
          value: "{{ states('input_select.hasp_plate01_p1_b4_scene') }}"
  - alias: hasp_plate01_p1_b5_scene_save
    trigger:
      - platform: state
        entity_id: input_select.hasp_plate01_p1_b5_scene
    action:
      - service: input_text.set_value
        data_template:
          entity_id: input_text.hasp_plate01_p1_b5_scene
          value: "{{ states('input_select.hasp_plate01_p1_b5_scene') }}"
  - alias: hasp_plate01_p1_b6_scene_save
    trigger:
      - platform: state
        entity_id: input_select.hasp_plate01_p1_b6_scene
    action:
      - service: input_text.set_value
        data_template:
          entity_id: input_text.hasp_plate01_p1_b6_scene
          value: "{{ states('input_select.hasp_plate01_p1_b6_scene') }}"
  - alias: hasp_plate01_p1_b7_scene_save
    trigger:
      - platform: state
        entity_id: input_select.hasp_plate01_p1_b7_scene
    action:
      - service: input_text.set_value
        data_template:
          entity_id: input_text.hasp_plate01_p1_b7_scene
          value: "{{ states('input_select.hasp_plate01_p1_b7_scene') }}"

  # Apply text labels and font to scene buttons
  - alias: hasp_plate01_p1_b4_scene_label
    trigger:
      - platform: state
        entity_id: "binary_sensor.plate01_connected"
        to: "on"
      - platform: homeassistant
        event: start
      - platform: state
        entity_id: input_select.hasp_plate01_p1_b4_scene
      - platform: state
        entity_id: input_text.hasp_plate01_p1_b4_text
      - platform: state
        entity_id: input_select.hasp_plate01_p1_b4_font
    action:
      - service: mqtt.publish
        data:
          topic: "hasp/plate01/command/json"
          payload_template: >-
            ["p[1].b[4].font={{states('input_select.hasp_plate01_p1_b4_font').split(" ")[0]|int}}","p[1].b[4].txt=\"{{states('input_text.hasp_plate01_p1_b4_text')}}\""]
  - alias: hasp_plate01_p1_b5_scene_label
    trigger:
      - platform: state
        entity_id: "binary_sensor.plate01_connected"
        to: "on"
      - platform: homeassistant
        event: start
      - platform: state
        entity_id: input_select.hasp_plate01_p1_b5_scene
      - platform: state
        entity_id: input_text.hasp_plate01_p1_b5_text
      - platform: state
        entity_id: input_select.hasp_plate01_p1_b5_font
    action:
      - service: mqtt.publish
        data:
          topic: "hasp/plate01/command/json"
          payload_template: >-
            ["p[1].b[5].font={{states('input_select.hasp_plate01_p1_b5_font').split(" ")[0]|int}}","p[1].b[5].txt=\"{{states('input_text.hasp_plate01_p1_b5_text')}}\""]
  - alias: hasp_plate01_p1_b6_scene_label
    trigger:
      - platform: state
        entity_id: "binary_sensor.plate01_connected"
        to: "on"
      - platform: homeassistant
        event: start
      - platform: state
        entity_id: input_select.hasp_plate01_p1_b6_scene
      - platform: state
        entity_id: input_text.hasp_plate01_p1_b6_text
      - platform: state
        entity_id: input_select.hasp_plate01_p1_b6_font
    action:
      - service: mqtt.publish
        data:
          topic: "hasp/plate01/command/json"
          payload_template: >-
            ["p[1].b[6].font={{states('input_select.hasp_plate01_p1_b6_font').split(" ")[0]|int}}","p[1].b[6].txt=\"{{states('input_text.hasp_plate01_p1_b6_text')}}\""]
  - alias: hasp_plate01_p1_b7_scene_label
    trigger:
      - platform: state
        entity_id: "binary_sensor.plate01_connected"
        to: "on"
      - platform: homeassistant
        event: start
      - platform: state
        entity_id: input_select.hasp_plate01_p1_b7_scene
      - platform: state
        entity_id: input_text.hasp_plate01_p1_b7_text
      - platform: state
        entity_id: input_select.hasp_plate01_p1_b7_font
    action:
      - service: mqtt.publish
        data:
          topic: "hasp/plate01/command/json"
          payload_template: >-
            ["p[1].b[7].font={{states('input_select.hasp_plate01_p1_b7_font').split(" ")[0]|int}}","p[1].b[7].txt=\"{{states('input_text.hasp_plate01_p1_b7_text')}}\""]

  # Trigger scene.lights_on when p[1] buttons are pressed
  - alias: hasp_plate01_p1_b4_scene_select
    trigger:
      - platform: mqtt
        topic: "hasp/plate01/state/p[1].b[4]"
        payload: "ON"
    action:
      - service: scene.turn_on
        data_template:
          entity_id: "{{ states('input_select.hasp_plate01_p1_b4_scene') }}"
  - alias: hasp_plate01_p1_b5_scene_select
    trigger:
      - platform: mqtt
        topic: "hasp/plate01/state/p[1].b[5]"
        payload: "ON"
    action:
      - service: scene.turn_on
        data_template:
          entity_id: "{{ states('input_select.hasp_plate01_p1_b5_scene') }}"
  - alias: hasp_plate01_p1_b6_scene_select
    trigger:
      - platform: mqtt
        topic: "hasp/plate01/state/p[1].b[6]"
        payload: "ON"
    action:
      - service: scene.turn_on
        data_template:
          entity_id: "{{ states('input_select.hasp_plate01_p1_b6_scene') }}"
  - alias: hasp_plate01_p1_b7_scene_select
    trigger:
      - platform: mqtt
        topic: "hasp/plate01/state/p[1].b[7]"
        payload: "ON"
    action:
      - service: scene.turn_on
        data_template:
          entity_id: "{{ states('input_select.hasp_plate01_p1_b7_scene') }}"

  ##############################################################################
  # Automations to set colors on HASP Page 1
  #
  # These automations are a little more advanced.  Feel free to ignore if you're
  # just starting to dig into this project.
  #
  # Here we've swapped selected/unselected as these buttons will always be
  # unselected (unless actively being pressed).
  - alias: hasp_plate01_p1_ColorConfig_selectedforegroundcolor
    trigger:
      - platform: state
        entity_id: "binary_sensor.plate01_connected"
        to: "on"
      - platform: homeassistant
        event: start
      - platform: state
        entity_id: input_number.hasp_plate01_selectedforegroundcolor
    action:
      - service: mqtt.publish
        data:
          topic: "hasp/plate01/command/json"
          payload_template: >-
            [{%- for i in range(4,8) -%}"p[1].b[{{i}}].pco={{ states('input_number.hasp_plate01_selectedforegroundcolor')|int }}"{% if not loop.last %},{% endif %}{%- endfor -%}]

  - alias: hasp_plate01_p1_ColorConfig_selectedbackgroundcolor
    trigger:
      - platform: state
        entity_id: "binary_sensor.plate01_connected"
        to: "on"
      - platform: homeassistant
        event: start
      - platform: state
        entity_id: input_number.hasp_plate01_selectedbackgroundcolor
    action:
      - service: mqtt.publish
        data:
          topic: "hasp/plate01/command/json"
          payload_template: >-
            [{%- for i in range(4,8) -%}"p[1].b[{{i}}].bco={{ states('input_number.hasp_plate01_selectedbackgroundcolor')|int }}"{% if not loop.last %},{% endif %}{%- endfor -%}]

  - alias: hasp_plate01_p1_ColorConfig_unselectedforegroundcolor
    trigger:
      - platform: state
        entity_id: "binary_sensor.plate01_connected"
        to: "on"
      - platform: homeassistant
        event: start
      - platform: state
        entity_id: input_number.hasp_plate01_unselectedforegroundcolor
    action:
      - service: mqtt.publish
        data:
          topic: "hasp/plate01/command/json"
          payload_template: >-
            [{%- for i in range(4,8) -%}"p[1].b[{{i}}].pco2={{ states('input_number.hasp_plate01_unselectedforegroundcolor')|int }}"{% if not loop.last %},{% endif %}{%- endfor -%}]

  - alias: hasp_plate01_p1_ColorConfig_unselectedbackgroundcolor
    trigger:
      - platform: state
        entity_id: "binary_sensor.plate01_connected"
        to: "on"
      - platform: homeassistant
        event: start
      - platform: state
        entity_id: input_number.hasp_plate01_unselectedbackgroundcolor
    action:
      - service: mqtt.publish
        data:
          topic: "hasp/plate01/command/json"
          payload_template: >-
            [{%- for i in range(4,8) -%}"p[1].b[{{i}}].bco2={{ states('input_number.hasp_plate01_unselectedbackgroundcolor')|int }}"{% if not loop.last %},{% endif %}{%- endfor -%}]
